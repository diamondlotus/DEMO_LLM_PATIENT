{"ast":null,"code":"import _objectSpread from\"/Users/macbook/Documents/MY_WORKS/CTO_SA/LLM/lotushealth/services/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useContext,useReducer,useEffect}from'react';import jwtDecode from'jwt-decode';import{authAPI}from'../services/api';import{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();const initialState={user:null,token:localStorage.getItem('token'),isAuthenticated:false,loading:true,role:null};const authReducer=(state,action)=>{switch(action.type){case'LOGIN_START':return _objectSpread(_objectSpread({},state),{},{loading:true});case'LOGIN_SUCCESS':return _objectSpread(_objectSpread({},state),{},{user:action.payload.user,token:action.payload.token,isAuthenticated:true,loading:false,role:action.payload.user.role});case'LOGIN_FAILURE':return _objectSpread(_objectSpread({},state),{},{user:null,token:null,isAuthenticated:false,loading:false,role:null});case'LOGOUT':return _objectSpread(_objectSpread({},state),{},{user:null,token:null,isAuthenticated:false,loading:false,role:null});case'UPDATE_USER':return _objectSpread(_objectSpread({},state),{},{user:action.payload});default:return state;}};export const AuthProvider=_ref=>{let{children}=_ref;const[state,dispatch]=useReducer(authReducer,initialState);useEffect(()=>{const initializeAuth=async()=>{const token=localStorage.getItem('token');if(token){try{// Check if token is expired\nconst decoded=jwtDecode(token);const currentTime=Date.now()/1000;if(decoded.exp<currentTime){// Token expired\nlocalStorage.removeItem('token');dispatch({type:'LOGIN_FAILURE'});return;}// Token is valid, get user info\nconst response=await authAPI.getCurrentUser();dispatch({type:'LOGIN_SUCCESS',payload:{user:response.data,token}});}catch(error){console.error('Auth initialization error:',error);localStorage.removeItem('token');dispatch({type:'LOGIN_FAILURE'});}}else{dispatch({type:'LOGIN_FAILURE'});}};initializeAuth();},[]);const login=async(email,password)=>{dispatch({type:'LOGIN_START'});try{const response=await authAPI.login(email,password);const{access_token,user}=response.data;localStorage.setItem('token',access_token);dispatch({type:'LOGIN_SUCCESS',payload:{user,token:access_token}});return{success:true};}catch(error){var _error$response,_error$response$data;dispatch({type:'LOGIN_FAILURE'});return{success:false,error:((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.detail)||'Login failed'};}};const logout=()=>{localStorage.removeItem('token');dispatch({type:'LOGOUT'});};const updateUser=userData=>{dispatch({type:'UPDATE_USER',payload:userData});};const hasPermission=permission=>{if(!state.user||!state.user.permissions)return false;return state.user.permissions.includes(permission);};const hasRole=role=>{if(!state.user)return false;return state.user.role===role;};const value=_objectSpread(_objectSpread({},state),{},{login,logout,updateUser,hasPermission,hasRole});return/*#__PURE__*/_jsx(AuthContext.Provider,{value:value,children:children});};export const useAuth=()=>{const context=useContext(AuthContext);if(!context){throw new Error('useAuth must be used within an AuthProvider');}return context;};","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jwtDecode","authAPI","jsx","_jsx","AuthContext","initialState","user","token","localStorage","getItem","isAuthenticated","loading","role","authReducer","state","action","type","_objectSpread","payload","AuthProvider","_ref","children","dispatch","initializeAuth","decoded","currentTime","Date","now","exp","removeItem","response","getCurrentUser","data","error","console","login","email","password","access_token","setItem","success","_error$response","_error$response$data","detail","logout","updateUser","userData","hasPermission","permission","permissions","includes","hasRole","value","Provider","useAuth","context","Error"],"sources":["/Users/macbook/Documents/MY_WORKS/CTO_SA/LLM/lotushealth/services/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { authAPI } from '../services/api';\n\nconst AuthContext = createContext();\n\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  role: null,\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        role: action.payload.user.role,\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        role: null,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        role: null,\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      \n      if (token) {\n        try {\n          // Check if token is expired\n          const decoded = jwtDecode(token);\n          const currentTime = Date.now() / 1000;\n          \n          if (decoded.exp < currentTime) {\n            // Token expired\n            localStorage.removeItem('token');\n            dispatch({ type: 'LOGIN_FAILURE' });\n            return;\n          }\n\n          // Token is valid, get user info\n          const response = await authAPI.getCurrentUser();\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: response.data,\n              token,\n            },\n          });\n        } catch (error) {\n          console.error('Auth initialization error:', error);\n          localStorage.removeItem('token');\n          dispatch({ type: 'LOGIN_FAILURE' });\n        }\n      } else {\n        dispatch({ type: 'LOGIN_FAILURE' });\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    dispatch({ type: 'LOGIN_START' });\n    \n    try {\n      const response = await authAPI.login(email, password);\n      const { access_token, user } = response.data;\n      \n      localStorage.setItem('token', access_token);\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token: access_token,\n        },\n      });\n      \n      return { success: true };\n    } catch (error) {\n      dispatch({ type: 'LOGIN_FAILURE' });\n      return { \n        success: false, \n        error: error.response?.data?.detail || 'Login failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const updateUser = (userData) => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData,\n    });\n  };\n\n  const hasPermission = (permission) => {\n    if (!state.user || !state.user.permissions) return false;\n    return state.user.permissions.includes(permission);\n  };\n\n  const hasRole = (role) => {\n    if (!state.user) return false;\n    return state.user.role === role;\n  };\n\n  const value = {\n    ...state,\n    login,\n    logout,\n    updateUser,\n    hasPermission,\n    hasRole,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"+JAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,UAAU,CAAEC,SAAS,KAAQ,OAAO,CAC/E,MAAO,CAAAC,SAAS,KAAM,YAAY,CAClC,OAASC,OAAO,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE1C,KAAM,CAAAC,WAAW,cAAGR,aAAa,CAAC,CAAC,CAEnC,KAAM,CAAAS,YAAY,CAAG,CACnBC,IAAI,CAAE,IAAI,CACVC,KAAK,CAAEC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CACpCC,eAAe,CAAE,KAAK,CACtBC,OAAO,CAAE,IAAI,CACbC,IAAI,CAAE,IACR,CAAC,CAED,KAAM,CAAAC,WAAW,CAAGA,CAACC,KAAK,CAAEC,MAAM,GAAK,CACrC,OAAQA,MAAM,CAACC,IAAI,EACjB,IAAK,aAAa,CAChB,OAAAC,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRH,OAAO,CAAE,IAAI,GAEjB,IAAK,eAAe,CAClB,OAAAM,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRR,IAAI,CAAES,MAAM,CAACG,OAAO,CAACZ,IAAI,CACzBC,KAAK,CAAEQ,MAAM,CAACG,OAAO,CAACX,KAAK,CAC3BG,eAAe,CAAE,IAAI,CACrBC,OAAO,CAAE,KAAK,CACdC,IAAI,CAAEG,MAAM,CAACG,OAAO,CAACZ,IAAI,CAACM,IAAI,GAElC,IAAK,eAAe,CAClB,OAAAK,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRR,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXG,eAAe,CAAE,KAAK,CACtBC,OAAO,CAAE,KAAK,CACdC,IAAI,CAAE,IAAI,GAEd,IAAK,QAAQ,CACX,OAAAK,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRR,IAAI,CAAE,IAAI,CACVC,KAAK,CAAE,IAAI,CACXG,eAAe,CAAE,KAAK,CACtBC,OAAO,CAAE,KAAK,CACdC,IAAI,CAAE,IAAI,GAEd,IAAK,aAAa,CAChB,OAAAK,aAAA,CAAAA,aAAA,IACKH,KAAK,MACRR,IAAI,CAAES,MAAM,CAACG,OAAO,GAExB,QACE,MAAO,CAAAJ,KAAK,CAChB,CACF,CAAC,CAED,MAAO,MAAM,CAAAK,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACN,KAAK,CAAEQ,QAAQ,CAAC,CAAGxB,UAAU,CAACe,WAAW,CAAER,YAAY,CAAC,CAE/DN,SAAS,CAAC,IAAM,CACd,KAAM,CAAAwB,cAAc,CAAG,KAAAA,CAAA,GAAY,CACjC,KAAM,CAAAhB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAE3C,GAAIF,KAAK,CAAE,CACT,GAAI,CACF;AACA,KAAM,CAAAiB,OAAO,CAAGxB,SAAS,CAACO,KAAK,CAAC,CAChC,KAAM,CAAAkB,WAAW,CAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAG,IAAI,CAErC,GAAIH,OAAO,CAACI,GAAG,CAAGH,WAAW,CAAE,CAC7B;AACAjB,YAAY,CAACqB,UAAU,CAAC,OAAO,CAAC,CAChCP,QAAQ,CAAC,CAAEN,IAAI,CAAE,eAAgB,CAAC,CAAC,CACnC,OACF,CAEA;AACA,KAAM,CAAAc,QAAQ,CAAG,KAAM,CAAA7B,OAAO,CAAC8B,cAAc,CAAC,CAAC,CAC/CT,QAAQ,CAAC,CACPN,IAAI,CAAE,eAAe,CACrBE,OAAO,CAAE,CACPZ,IAAI,CAAEwB,QAAQ,CAACE,IAAI,CACnBzB,KACF,CACF,CAAC,CAAC,CACJ,CAAE,MAAO0B,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClDzB,YAAY,CAACqB,UAAU,CAAC,OAAO,CAAC,CAChCP,QAAQ,CAAC,CAAEN,IAAI,CAAE,eAAgB,CAAC,CAAC,CACrC,CACF,CAAC,IAAM,CACLM,QAAQ,CAAC,CAAEN,IAAI,CAAE,eAAgB,CAAC,CAAC,CACrC,CACF,CAAC,CAEDO,cAAc,CAAC,CAAC,CAClB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAY,KAAK,CAAG,KAAAA,CAAOC,KAAK,CAAEC,QAAQ,GAAK,CACvCf,QAAQ,CAAC,CAAEN,IAAI,CAAE,aAAc,CAAC,CAAC,CAEjC,GAAI,CACF,KAAM,CAAAc,QAAQ,CAAG,KAAM,CAAA7B,OAAO,CAACkC,KAAK,CAACC,KAAK,CAAEC,QAAQ,CAAC,CACrD,KAAM,CAAEC,YAAY,CAAEhC,IAAK,CAAC,CAAGwB,QAAQ,CAACE,IAAI,CAE5CxB,YAAY,CAAC+B,OAAO,CAAC,OAAO,CAAED,YAAY,CAAC,CAE3ChB,QAAQ,CAAC,CACPN,IAAI,CAAE,eAAe,CACrBE,OAAO,CAAE,CACPZ,IAAI,CACJC,KAAK,CAAE+B,YACT,CACF,CAAC,CAAC,CAEF,MAAO,CAAEE,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOP,KAAK,CAAE,KAAAQ,eAAA,CAAAC,oBAAA,CACdpB,QAAQ,CAAC,CAAEN,IAAI,CAAE,eAAgB,CAAC,CAAC,CACnC,MAAO,CACLwB,OAAO,CAAE,KAAK,CACdP,KAAK,CAAE,EAAAQ,eAAA,CAAAR,KAAK,CAACH,QAAQ,UAAAW,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBT,IAAI,UAAAU,oBAAA,iBAApBA,oBAAA,CAAsBC,MAAM,GAAI,cACzC,CAAC,CACH,CACF,CAAC,CAED,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnBpC,YAAY,CAACqB,UAAU,CAAC,OAAO,CAAC,CAChCP,QAAQ,CAAC,CAAEN,IAAI,CAAE,QAAS,CAAC,CAAC,CAC9B,CAAC,CAED,KAAM,CAAA6B,UAAU,CAAIC,QAAQ,EAAK,CAC/BxB,QAAQ,CAAC,CACPN,IAAI,CAAE,aAAa,CACnBE,OAAO,CAAE4B,QACX,CAAC,CAAC,CACJ,CAAC,CAED,KAAM,CAAAC,aAAa,CAAIC,UAAU,EAAK,CACpC,GAAI,CAAClC,KAAK,CAACR,IAAI,EAAI,CAACQ,KAAK,CAACR,IAAI,CAAC2C,WAAW,CAAE,MAAO,MAAK,CACxD,MAAO,CAAAnC,KAAK,CAACR,IAAI,CAAC2C,WAAW,CAACC,QAAQ,CAACF,UAAU,CAAC,CACpD,CAAC,CAED,KAAM,CAAAG,OAAO,CAAIvC,IAAI,EAAK,CACxB,GAAI,CAACE,KAAK,CAACR,IAAI,CAAE,MAAO,MAAK,CAC7B,MAAO,CAAAQ,KAAK,CAACR,IAAI,CAACM,IAAI,GAAKA,IAAI,CACjC,CAAC,CAED,KAAM,CAAAwC,KAAK,CAAAnC,aAAA,CAAAA,aAAA,IACNH,KAAK,MACRqB,KAAK,CACLS,MAAM,CACNC,UAAU,CACVE,aAAa,CACbI,OAAO,EACR,CAED,mBACEhD,IAAA,CAACC,WAAW,CAACiD,QAAQ,EAACD,KAAK,CAAEA,KAAM,CAAA/B,QAAA,CAChCA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED,MAAO,MAAM,CAAAiC,OAAO,CAAGA,CAAA,GAAM,CAC3B,KAAM,CAAAC,OAAO,CAAG1D,UAAU,CAACO,WAAW,CAAC,CACvC,GAAI,CAACmD,OAAO,CAAE,CACZ,KAAM,IAAI,CAAAC,KAAK,CAAC,6CAA6C,CAAC,CAChE,CACA,MAAO,CAAAD,OAAO,CAChB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}