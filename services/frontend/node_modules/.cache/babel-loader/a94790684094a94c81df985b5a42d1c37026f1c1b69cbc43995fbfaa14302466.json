{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Documents/MY_WORKS/CTO_SA/LLM/lotushealth/services/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { authAPI } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  role: null\n};\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        role: action.payload.user.role\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        role: null\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        role: null\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(authReducer, initialState);\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          // Check if token is expired\n          const decoded = jwtDecode(token);\n          const currentTime = Date.now() / 1000;\n          if (decoded.exp < currentTime) {\n            // Token expired\n            localStorage.removeItem('token');\n            dispatch({\n              type: 'LOGIN_FAILURE'\n            });\n            return;\n          }\n\n          // Token is valid, get user info\n          const response = await authAPI.getCurrentUser();\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: response.data,\n              token\n            }\n          });\n        } catch (error) {\n          console.error('Auth initialization error:', error);\n          localStorage.removeItem('token');\n          dispatch({\n            type: 'LOGIN_FAILURE'\n          });\n        }\n      } else {\n        dispatch({\n          type: 'LOGIN_FAILURE'\n        });\n      }\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    dispatch({\n      type: 'LOGIN_START'\n    });\n    try {\n      const response = await authAPI.login(email, password);\n      const {\n        access_token,\n        user\n      } = response.data;\n      localStorage.setItem('token', access_token);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token: access_token\n        }\n      });\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      dispatch({\n        type: 'LOGIN_FAILURE'\n      });\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || 'Login failed'\n      };\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({\n      type: 'LOGOUT'\n    });\n  };\n  const updateUser = userData => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData\n    });\n  };\n  const hasPermission = permission => {\n    if (!state.user || !state.user.permissions) return false;\n    return state.user.permissions.includes(permission);\n  };\n  const hasRole = role => {\n    if (!state.user) return false;\n    return state.user.role === role;\n  };\n  const value = {\n    ...state,\n    login,\n    logout,\n    updateUser,\n    hasPermission,\n    hasRole\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","useEffect","jwtDecode","authAPI","jsxDEV","_jsxDEV","AuthContext","initialState","user","token","localStorage","getItem","isAuthenticated","loading","role","authReducer","state","action","type","payload","AuthProvider","children","_s","dispatch","initializeAuth","decoded","currentTime","Date","now","exp","removeItem","response","getCurrentUser","data","error","console","login","email","password","access_token","setItem","success","_error$response","_error$response$data","detail","logout","updateUser","userData","hasPermission","permission","permissions","includes","hasRole","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/Users/macbook/Documents/MY_WORKS/CTO_SA/LLM/lotushealth/services/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useReducer, useEffect } from 'react';\nimport { jwtDecode } from 'jwt-decode';\nimport { authAPI } from '../services/api';\n\nconst AuthContext = createContext();\n\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: false,\n  loading: true,\n  role: null,\n};\n\nconst authReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN_START':\n      return {\n        ...state,\n        loading: true,\n      };\n    case 'LOGIN_SUCCESS':\n      return {\n        ...state,\n        user: action.payload.user,\n        token: action.payload.token,\n        isAuthenticated: true,\n        loading: false,\n        role: action.payload.user.role,\n      };\n    case 'LOGIN_FAILURE':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        role: null,\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        user: null,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        role: null,\n      };\n    case 'UPDATE_USER':\n      return {\n        ...state,\n        user: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(authReducer, initialState);\n\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = localStorage.getItem('token');\n      \n      if (token) {\n        try {\n          // Check if token is expired\n          const decoded = jwtDecode(token);\n          const currentTime = Date.now() / 1000;\n          \n          if (decoded.exp < currentTime) {\n            // Token expired\n            localStorage.removeItem('token');\n            dispatch({ type: 'LOGIN_FAILURE' });\n            return;\n          }\n\n          // Token is valid, get user info\n          const response = await authAPI.getCurrentUser();\n          dispatch({\n            type: 'LOGIN_SUCCESS',\n            payload: {\n              user: response.data,\n              token,\n            },\n          });\n        } catch (error) {\n          console.error('Auth initialization error:', error);\n          localStorage.removeItem('token');\n          dispatch({ type: 'LOGIN_FAILURE' });\n        }\n      } else {\n        dispatch({ type: 'LOGIN_FAILURE' });\n      }\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    dispatch({ type: 'LOGIN_START' });\n    \n    try {\n      const response = await authAPI.login(email, password);\n      const { access_token, user } = response.data;\n      \n      localStorage.setItem('token', access_token);\n      \n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user,\n          token: access_token,\n        },\n      });\n      \n      return { success: true };\n    } catch (error) {\n      dispatch({ type: 'LOGIN_FAILURE' });\n      return { \n        success: false, \n        error: error.response?.data?.detail || 'Login failed' \n      };\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    dispatch({ type: 'LOGOUT' });\n  };\n\n  const updateUser = (userData) => {\n    dispatch({\n      type: 'UPDATE_USER',\n      payload: userData,\n    });\n  };\n\n  const hasPermission = (permission) => {\n    if (!state.user || !state.user.permissions) return false;\n    return state.user.permissions.includes(permission);\n  };\n\n  const hasRole = (role) => {\n    if (!state.user) return false;\n    return state.user.role === role;\n  };\n\n  const value = {\n    ...state,\n    login,\n    logout,\n    updateUser,\n    hasPermission,\n    hasRole,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}